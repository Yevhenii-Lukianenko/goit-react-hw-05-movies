{"version":3,"file":"static/js/431.0456e817.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/movies/Movies.styled.jsx","components/SearchMovieForm/SearchMovieForm.styled.jsx","components/SearchMovieForm/SearchMovieForm.jsx","pages/movies/Movies.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  width: 275px;\n  background-color: #4c4c4c;\n  transition: transform 0.3s ease;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const DetailLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const Image = styled.img`\n  height: 412px;\n  object-fit: cover;\n`;\n\nexport const TextContainer = styled.div`\n  flex-grow: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px;\n`;\n\nexport const MovieTitle = styled.h3`\n  color: #bcbcbc;\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport defaultMovieImg from '../../images/defaultMovieImg.png';\nimport {\n  List,\n  MovieCard,\n  DetailLink,\n  Image,\n  TextContainer,\n  MovieTitle,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(({ id, poster_path, title }) => (\n        <MovieCard key={id}>\n          <DetailLink to={`/movies/${id}`} state={{ from: location }}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w400${poster_path}`\n                  : defaultMovieImg\n              }\n              alt={title}\n            />\n            <TextContainer>\n              <MovieTitle>{title}</MovieTitle>\n            </TextContainer>\n          </DetailLink>\n        </MovieCard>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Section = styled.section`\n  color: #bcbcbc;\n  margin: 20px 0;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label``;\n\nexport const Input = styled.input`\n  padding-left: 12px;\n  height: 35px;\n  width: 270px;\n  border-radius: 6px;\n  border: none;\n  outline: none;\n`;\n\nexport const SubmitBtn = styled.button`\n  margin-left: 20px;\n  height: 35px;\n  width: 75px;\n  color: #bcbcbc;\n  background-color: #4c4c4c;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  &:hover {\n    color: #292929;\n    background-color: tomato;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { Form, Label, Input, SubmitBtn } from './SearchMovieForm.styled';\n\nexport const SearchMovieForm = props => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const handleSearchQuery = e => setSearchQuery(e.currentTarget.value);\n\n  useEffect(() => {\n    if (props.query) {\n      setSearchQuery(props.query);\n    }\n  }, [props.query]);\n\n  return (\n    <Form\n      onSubmit={e => {\n        e.preventDefault();\n        if (searchQuery.trim() === '') {\n          return;\n        }\n        props.onSubmit(searchQuery);\n      }}\n    >\n      <Label>\n        <Input\n          placeholder=\"Enter the name of the movie\"\n          type=\"text\"\n          value={searchQuery}\n          onChange={handleSearchQuery}\n        />\n      </Label>\n      <SubmitBtn type=\"submit\">Search</SubmitBtn>\n    </Form>\n  );\n};\n\nSearchMovieForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useSearchParams } from 'react-router-dom';\nimport { Section } from './Movies.styled';\nimport { Container } from 'components/Container/Container';\nimport { SearchMovieForm } from '../../components/SearchMovieForm/SearchMovieForm';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport API from 'services/api';\nconst api = new API();\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  const handleSubmitForm = query => {\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      const searchMovies = await api.searchMovies(query);\n      setMovies(searchMovies);\n      setLoading(false);\n    };\n\n    fetchMovies();\n  }, [query]);\n\n  return (\n    <Section>\n      <Container>\n        {movieId ? (\n          <Outlet />\n        ) : (\n          <div>\n            <SearchMovieForm onSubmit={handleSubmitForm} query={query} />\n            {!isLoading ? <MoviesList movies={movies} /> : <Loader />}\n          </div>\n        )}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nclass API {\n  constructor() {\n    this.apiKey = 'c4665b1bb83f92274dd3017d4b062627';\n  }\n\n  async getTrendingMovies() {\n    try {\n      const response = await axios.get('/trending/movie/week', {\n        params: {\n          api_key: this.apiKey,\n        },\n      });\n      return response.data.results;\n    } catch (error) {\n      Notify.failure(`Error getting trending movies: ${error}`);\n      throw error;\n    }\n  }\n\n  async searchMovies(query) {\n    try {\n      const response = await axios.get('/search/movie', {\n        params: {\n          api_key: this.apiKey,\n          query: query,\n        },\n      });\n      return response.data.results;\n    } catch (error) {\n      Notify.failure(`Error searching movies: ${error}`);\n      throw error;\n    }\n  }\n\n  async getMovieDetails(movieId) {\n    try {\n      const response = await axios.get(`/movie/${movieId}`, {\n        params: {\n          api_key: this.apiKey,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      Notify.failure(`Error getting movie: ${error}`);\n      throw error;\n    }\n  }\n\n  async getMovieCast(movieId) {\n    try {\n      const response = await axios.get(`/movie/${movieId}/credits`, {\n        params: {\n          api_key: this.apiKey,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      Notify.failure(`Error getting movie cast: ${error}`);\n      throw error;\n    }\n  }\n\n  async getMovieReviews(movieId) {\n    try {\n      const response = await axios.get(`/movie/${movieId}/reviews`, {\n        params: {\n          api_key: this.apiKey,\n        },\n      });\n      return response.data.results;\n    } catch (error) {\n      Notify.failure(`Error getting movie review: ${error}`);\n      throw error;\n    }\n  }\n}\n\nexport default API;\n"],"names":["List","styled","MovieCard","DetailLink","Link","Image","TextContainer","MovieTitle","MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","src","defaultMovieImg","alt","Section","Form","Label","Input","SubmitBtn","SearchMovieForm","props","useState","searchQuery","setSearchQuery","useEffect","query","onSubmit","e","preventDefault","trim","placeholder","type","value","onChange","currentTarget","api","API","useSearchParams","searchParams","setSearchParams","get","setMovies","isLoading","setLoading","movieId","useParams","fetchMovies","searchMovies","Container","Loader","axios","this","apiKey","params","api_key","response","data","results","Notify"],"sourceRoot":""}